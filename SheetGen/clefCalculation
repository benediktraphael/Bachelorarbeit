
def clefCalculation(clef, key):
    '''
        determines the calculation-array

        Args:
            key(int): number of accidentals (+ sharp, - flat); example: G major = +1
            clef(int): MidiNumber of the note, which is on the center-line in the used clef
        
        Returns:
            [](int): relative positions of Midis, which have accidentals
            (int): The StartIndex, which black key is the next.
            (int(bool)): natural or standard sign.(0 none, 1 sharp, -1 flat, 2 natural)

    '''
    #Steps from F to the black Notes in Order (Fis, Gis, Ais, Cis, Dis)
    used_clef = [1,3,5,8,10]
    #The movement, such it is relative to Center-Tone and not F.
    match clef: 
        case 71:#Treble
            used_clef = [(a - 6) % 12 for a in used_clef]
            startIndex = 3#Cis is the first accidental from H
        case 50:#Bass
            used_clef = [(a + 5) % 12 for a in used_clef]
            startIndex = 4#Dis is the first accidental from D


    #Order, in which sharps, flats effect them (1. Fis, 2. Cis, ...)
    accidentals_order = [0,3,1,4,2]

    #if there is an key, the changed white key needs a natural sign.
    #0 means, standard sign. 1 means Changed, natural sign
    accidentals = [0, 0, 0, 0, 0]


    #flats, as means that a (one above) is now the outlieer
    while(key < 0):
        used_clef[accidentals_order[key]] += 1
        key += 1
        accidentals[accidentals_order[key]] = 1

    while(key > 0):
        used_clef[accidentals_order[key-1]] -= 1
        key -= 1
        accidentals[accidentals_order[key-1]] = 1

    return (startIndex, used_clef, accidentals)